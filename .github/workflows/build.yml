name: Rust Build and Release

on:
  push:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: ${{ steps.set-artifact-name.outputs.artifact-name }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true
      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-gnu
      - name: Set artifact name
        id: set-artifact-name
        run: echo "::set-output name=artifact-name::http2amcp-linux"

  build-windows:
    runs-on: windows-latest
    outputs:
      artifact-name: ${{ steps.set-artifact-name.outputs.artifact-name }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true
      - name: Build
        run: cargo build --release --target x86_64-pc-windows-msvc
      - name: Set artifact name
        id: set-artifact-name
        run: echo "::set-output name=artifact-name::http2amcp-windows.exe"

  create-release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Get the current date and time
        id: datetime
        run: echo "::set-output name=datetime::$(date +'%Y-%m-%d-%H-%M-%S')"

      - name: Create and Upload Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            target/x86_64-unknown-linux-gnu/release/http2amcp-linux
            target/x86_64-pc-windows-msvc/release/http2amcp-windows.exe
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: release-${{ steps.datetime.outputs.datetime }}
          name: Release ${{ steps.datetime.outputs.datetime }}
          draft: false
          prerelease: false

