name: Rust Build and Release

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: http2amcp
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: http2amcp.exe

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload artifact for release
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.binary_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.binary_name }}

  create-release-and-upload-assets:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Get the current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d.%H%M')"

      - name: Download all artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: ${{ steps.date.outputs.date }}
          draft: false
          prerelease: false

      - name: Upload release assets
        run: |
          for file in artifacts/*; do
            asset_name=$(basename "$file")
            echo "Uploading $asset_name"
            curl \
              -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$file" \
              "${{ steps.create_release.outputs.upload_url }}?name=${asset_name}"
          done
