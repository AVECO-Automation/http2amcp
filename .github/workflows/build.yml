name: Rust Build

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: http2amcp
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: http2amcp.exe

    steps:
    - uses: actions/checkout@v3

    - name: Get the current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: ${{ matrix.target }}
        override: true

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Upload artifact for release
      uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.binary_name }}-${{ steps.date.outputs.date }}
        path: target/${{ matrix.target }}/release/${{ matrix.binary_name }}


  create-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - name: Get the current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

    - name: Download all artifacts
      uses: actions/download-artifact@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ steps.date.outputs.date }}
        release_name: Release ${{ steps.date.outputs.date }}
        draft: false
        prerelease: false

    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ matrix.binary_name }}
        asset_name: ${{ matrix.binary_name }}
        asset_content_type: application/octet-stream
