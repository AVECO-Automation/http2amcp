name: Rust Build and Release

on:
  push:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    outputs:
      artifact-name: ${{ steps.set-artifact-name.outputs.artifact-name }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true

      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Upload Linux binary
        uses: actions/upload-artifact@v2
        with:
          name: http2amcp-linux
          path: target/x86_64-unknown-linux-gnu/release/http2amcp


  build-windows:
    runs-on: windows-latest
    outputs:
      artifact-name: ${{ steps.set-artifact-name.outputs.artifact-name }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true

      - name: Build
        run: cargo build --release --target x86_64-pc-windows-msvc

      - name: Upload Windows binary
        uses: actions/upload-artifact@v2
        with:
          name: http2amcp-windows
          path: target/x86_64-pc-windows-msvc/release/http2amcp.exe


  create-release:
    needs: [build-linux, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux binary artifact
        uses: actions/download-artifact@v2
        with:
          name: http2amcp-linux
          path: ./artifacts/linux

      - name: Download Windows binary artifact
        uses: actions/download-artifact@v2
        with:
          name: http2amcp-windows
          path: ./artifacts/windows

      - name: Get the current date and time
        id: datetime
        run: echo "::set-output name=datetime::$(date +'%Y%m%d.%H%M%S')"

      - name: Create and Upload Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            artifacts/linux/http2amcp
            artifacts/windows/http2amcp.exe
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: release-${{ steps.datetime.outputs.datetime }}
          name: Release ${{ steps.datetime.outputs.datetime }}
